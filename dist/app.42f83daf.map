{"version":3,"sources":["src/Demo2/Feact/Feact.js","src/Demo2/Feact/FeactDOM.js","src/Demo2/index.js","src/app.jsx"],"names":["createElement","tag","props","children","prototype","render","Error","name","instance","componentWillMount","vnode","Object","assign","type","Component","createChildren","targetNode","i","length","nextNode","document","createTextNode","createRealNode","appendChild","node","keys","forEach","key","setAttribute","value","componentDidMount","container","innerHTML","App","console","log","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;AAGA,SAASe,cAAT,CAAwBC,UAAxB,EAAoCN,KAApC,EAA2C;AAAA,QAC/BP,QAD+B,GACRO,KADQ,CAC/BP,QAD+B;AAAA,QACrBK,QADqB,GACRE,KADQ,CACrBF,QADqB;;;AAGvC,SAAK,IAAIS,IAAI,CAAb,EAAgBA,IAAId,SAASe,MAA7B,EAAqCD,GAArC,EAA0C;AACtC,YAAIE,WAAW,IAAf;;AAEA,wBAAehB,SAASc,CAAT,CAAf;AACI,iBAAK,QAAL;AACIE,2BAAWC,SAASC,cAAT,CAAwBlB,SAASc,CAAT,CAAxB,CAAX;AACA;AACJ;AACIE,2BAAWG,eAAenB,SAASc,CAAT,CAAf,CAAX;AACA;AANR;;AASAD,mBAAWO,WAAX,CAAuBJ,QAAvB;AACH;AACJ;;AAED,SAASG,cAAT,CAAwBZ,KAAxB,EAA+B;AAC3B,QAAMc,OAAOJ,SAASpB,aAAT,CAAuBU,MAAMT,GAA7B,CAAb;;AAEA,QAAIS,MAAMR,KAAV,EAAiB;AACbS,eAAOc,IAAP,CAAYf,MAAMR,KAAlB,EAAyBwB,OAAzB,CAAiC,eAAO;AACpC,oBAAQC,GAAR;AACI,qBAAK,WAAL;AACIH,yBAAKI,YAAL,CAAkB,OAAlB,EAA2BlB,MAAMR,KAAN,CAAY,WAAZ,CAA3B;AACA;AACJ;AACIsB,yBAAKI,YAAL,CAAkBD,GAAlB,EAAuBE,KAAvB;AACA;AANR;AAQH,SATD;AAUH;;AAED,QAAInB,MAAMP,QAAN,IAAkBO,MAAMP,QAAN,CAAee,MAArC,EAA6C;AACzCH,uBAAeS,IAAf,EAAqBd,KAArB;AACH;;AAED,QAAIA,MAAMF,QAAV,EAAoB;AAChBE,cAAMF,QAAN,CAAesB,iBAAf,IAAoCpB,MAAMF,QAAN,CAAesB,iBAAf,EAApC;AACH;;AAED,WAAON,IAAP;AACH;;AAED,SAASnB,MAAT,CAAgBK,KAAhB,EAAuBqB,SAAvB,EAAkC;AAC9B,QAAI,CAACrB,KAAL,EAAY;AACR,cAAM,IAAIJ,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAED,QAAI,CAACyB,SAAL,EAAgB;AACZ,cAAM,IAAIzB,KAAJ,CAAU,4BAAV,CAAN;AACH;;AAEDyB,cAAUC,SAAV,GAAsB,EAAtB;AACAD,cAAUR,WAAV,CAAsBD,eAAeZ,KAAf,CAAtB;AACH;;kBAEcf,SAASL,aAAT,CAAuBC,GAAvB,EAA4BC,KAA5B,EAAgD;AAAA,sCAAVC,QAAU;AAAVA,gBAAU;AAAA;;AAC5C,QAAI,OAAOF,GAAP,KAAe,UAAnB,EAA+B;AAC3B,YAAI,CAACA,IAAIG,SAAJ,CAAcC,MAAnB,EAA2B;AACvB,kBAAM,IAAIC,KAAJ,YAAmBL,IAAIM,IAAvB,+BAAN;AACH,AEJT;;AFMQ,YAAMC,WAAW,IAAIP,GAAJ,EAAjB;;AAEAO,AEPR,iBFOiBC,kBAAT,IAA+BD,SAASC,kBAAT,EAA/B;;AAEA,YAAMC,QAAQF,SAASH,MAAT,EAAd;;AAEA,eAAOM,OAAOC,MAAP,CAAc,EAAd,EAAkBF,KAAlB,EAAyB,EAAEG,MAAM,gBAAR,EAA0BL,kBAA1B,EAAzB,CAAP;AACH;;AAED,WAAO;AACHK,AEbR,cFac,cADH;AAEHZ,AEbR,gBFWW;AAGHC,oBAHG;AAIHC,IEbF8B;AFSK,KAAP;AAMH;;IAEKnB;;;oDEhB0B;AACxBoB,oBAAQC,GAAR,CAAY,wBAAZ;AACH;;mCFeU,CAAE;8CEdS;AAClBD,oBAAQC,GAAR,CAAY,iBAAZ;AACH;;;kBFeU,2BEdU;AFerBnC,AEdIkC,oBAAQC,GAAR,CAAY,QFaL,QEbP;AFeJrB,AEdC;AFYU;;6CEXU;AACjBoB,oBAAQC,GAAR,CAAY,gBAAZ;AACH;;;4CACmB;AAChBD,oBAAQC,GAAR,CAAY,eAAZ;AACH;;;iCACQ;AACL,mBACI;AAAA;AAAA,kBAAK,WAAU,KAAf;AACI;AAAA;AAAA;AAAA;AAAA,iBADJ;AAEI;AAAA;AAAA;AAAA;AAAA;AAFJ,aADJ;AAMH;;;;;;AAGL,mBAAS9B,MAAT,CAAgB,8BAAC,GAAD,OAAhB,EAAyBe,SAASgB,cAAT,CAAwB,MAAxB,CAAzfile":"app.42f83daf.map","sourceRoot":"..","sourcesContent":["function createElement(tag, props, ...children) {\n    if (typeof tag === 'function') {\n        if (!tag.prototype.render) {\n            throw new Error(`class ${tag.name} has not a render method!`)\n        }\n\n        const instance = new tag()\n\n        instance.componentWillMount && instance.componentWillMount()\n\n        const vnode = instance.render()\n\n        return Object.assign({}, vnode, { type: 'FeactComponent', instance })\n    }\n\n    return {\n        type: 'FeactElement',\n        tag,\n        props,\n        children\n    }\n}\n\nclass Component {\n    setState() {}\n}\n\nexport default {\n    createElement,\n    Component\n}\n","/**\n * componentWillMount 的执行时机是什么？在组件render方法之前执行\n */\nfunction createChildren(targetNode, vnode) {\n    const { children, instance } = vnode\n\n    for (let i = 0; i < children.length; i++) {\n        let nextNode = null\n\n        switch (typeof children[i]) {\n            case 'string':\n                nextNode = document.createTextNode(children[i])\n                break\n            default:\n                nextNode = createRealNode(children[i])\n                break\n        }\n\n        targetNode.appendChild(nextNode)\n    }\n}\n\nfunction createRealNode(vnode) {\n    const node = document.createElement(vnode.tag)\n\n    if (vnode.props) {\n        Object.keys(vnode.props).forEach(key => {\n            switch (key) {\n                case 'className':\n                    node.setAttribute('class', vnode.props['className'])\n                    break\n                default:\n                    node.setAttribute(key, value)\n                    break\n            }\n        })\n    }\n\n    if (vnode.children && vnode.children.length) {\n        createChildren(node, vnode)\n    }\n\n    if (vnode.instance) {\n        vnode.instance.componentDidMount && vnode.instance.componentDidMount()\n    }\n\n    return node\n}\n\nfunction render(vnode, container) {\n    if (!vnode) {\n        throw new Error('vnode can not be empty!')\n    }\n\n    if (!container) {\n        throw new Error('container can not be empty')\n    }\n\n    container.innerHTML = ''\n    container.appendChild(createRealNode(vnode))\n}\n\nexport default {\n    render\n}\n","import Feact from './Feact/Feact'\nimport FeactDOM from './Feact/FeactDOM'\n\n// demo-2\n// 这里实现一个组件的基本生命周期\n\nclass App {\n    componentWillReceiveProps() {\n        console.log('App will reveice props')\n    }\n    componentWillUpdate() {\n        console.log('App will update')\n    }\n    componentDidUpdate() {\n        console.log('App did update')\n    }\n    componentWillMount() {\n        console.log('App will mount')\n    }\n    componentDidMount() {\n        console.log('App did mount')\n    }\n    render() {\n        return (\n            <div className=\"app\">\n                <h1>this is app</h1>\n                <button>click</button>\n            </div>\n        )\n    }\n}\n\nFeactDOM.render(<App />, document.getElementById('root'))\n","// import './Demo1'\nimport './Demo2'"]}